"use strict";(()=>{var e={};e.id=795,e.ids=[795],e.modules={3524:e=>{e.exports=require("@prisma/client")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},5513:(e,t,r)=>{r.r(t),r.d(t,{config:()=>d,default:()=>u,routeModule:()=>p});var a={};r.r(a),r.d(a,{default:()=>l});var n=r(6794),o=r(6114),i=r(6249);let s=new(r(3524)).PrismaClient;async function l(e,t){if("POST"===e.method){let{employeeID:r,payPeriod:a,payRate:n,payRateSchedule:o,effectiveDate:i}=e.body;if(!r)return t.status(400).json({error:"Employee ID is required"});try{let e=await s.payRate.create({data:{employeeID:parseInt(r),payPeriod:a,payRate:parseFloat(n),payRateSchedule:o,effectiveDate:new Date(i),status:"Active",Employee:{connect:{id:r}}}});t.status(201).json(e)}catch(e){console.error("Failed to create pay rate:",e),t.status(500).json({error:"Failed to create pay rate",details:e.message})}}else t.setHeader("Allow",["POST"]),t.status(405).json({error:`Method ${e.method} not allowed`})}let u=(0,i.l)(a,"default"),d=(0,i.l)(a,"config"),p=new n.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/employee",pathname:"/api/employee",bundlePath:"",filename:""},userland:a})},6114:(e,t)=>{var r;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return r}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE"}(r||(r={}))},6794:(e,t,r)=>{e.exports=r(145)}};var t=require("../../webpack-api-runtime.js");t.C(e);var r=t(t.s=5513);module.exports=r})();